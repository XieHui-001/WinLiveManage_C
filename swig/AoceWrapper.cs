//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class AoceWrapper {
  public static void logMessage(LogLevel level, string message) {
    AoceWrapperPINVOKE.logMessage((int)level, message);
  }

  public static string getLogLevel(LogLevel level) {
    string ret = AoceWrapperPINVOKE.getLogLevel((int)level);
    return ret;
  }

  public static string getVideoType(VideoType value) {
    string ret = AoceWrapperPINVOKE.getVideoType((int)value);
    return ret;
  }

  public static string getImageType(ImageType imageType) {
    string ret = AoceWrapperPINVOKE.getImageType((int)imageType);
    return ret;
  }

  public static uint divUp(int x, int y) {
    uint ret = AoceWrapperPINVOKE.divUp(x, y);
    return ret;
  }

  public static long getNowTimeStamp() {
    long ret = AoceWrapperPINVOKE.getNowTimeStamp();
    return ret;
  }

  public static ImageType videoType2ImageType(VideoType videoType) {
    ImageType ret = (ImageType)AoceWrapperPINVOKE.videoType2ImageType((int)videoType);
    return ret;
  }

  public static VideoType imageType2VideoType(ImageType imageType) {
    VideoType ret = (VideoType)AoceWrapperPINVOKE.imageType2VideoType((int)imageType);
    return ret;
  }

  public static int getYuvIndex(VideoType videoType) {
    int ret = AoceWrapperPINVOKE.getYuvIndex((int)videoType);
    return ret;
  }

  public static ImageFormat videoFormat2ImageFormat(VideoFormat videoFormat) {
    ImageFormat ret = new ImageFormat(AoceWrapperPINVOKE.videoFormat2ImageFormat(VideoFormat.getCPtr(videoFormat)), true);
    if (AoceWrapperPINVOKE.SWIGPendingException.Pending) throw AoceWrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static int getImageTypeSize(ImageType imageType) {
    int ret = AoceWrapperPINVOKE.getImageTypeSize((int)imageType);
    return ret;
  }

  public static int getVideoFrame(VideoFrame frame, global::System.IntPtr data) {
    int ret = AoceWrapperPINVOKE.getVideoFrame(VideoFrame.getCPtr(frame), data);
    if (AoceWrapperPINVOKE.SWIGPendingException.Pending) throw AoceWrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static void createVideoFrame(VideoFrame frame, global::System.IntPtr data, int width, int height, VideoType videoType) {
    AoceWrapperPINVOKE.createVideoFrame(VideoFrame.getCPtr(frame), data, width, height, (int)videoType);
    if (AoceWrapperPINVOKE.SWIGPendingException.Pending) throw AoceWrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void loadAoce() {
    AoceWrapperPINVOKE.loadAoce();
  }

  public static void unloadAoce() {
    AoceWrapperPINVOKE.unloadAoce();
  }

  public static void initPlatform() {
    AoceWrapperPINVOKE.initPlatform();
  }

  public static void identMat(Mat4x4 mat) {
    AoceWrapperPINVOKE.identMat(Mat4x4.getCPtr(mat));
    if (AoceWrapperPINVOKE.SWIGPendingException.Pending) throw AoceWrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public static Mat4x4 matMult(Mat4x4 a, Mat4x4 b) {
    Mat4x4 ret = new Mat4x4(AoceWrapperPINVOKE.matMult(Mat4x4.getCPtr(a), Mat4x4.getCPtr(b)), true);
    if (AoceWrapperPINVOKE.SWIGPendingException.Pending) throw AoceWrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static vec3 transformMat(Mat4x4 mat, vec3 trans) {
    vec3 ret = new vec3(AoceWrapperPINVOKE.transformMat(Mat4x4.getCPtr(mat), vec3.getCPtr(trans)), true);
    if (AoceWrapperPINVOKE.SWIGPendingException.Pending) throw AoceWrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Mat4x4 scaleIdentMat(vec3 scale) {
    Mat4x4 ret = new Mat4x4(AoceWrapperPINVOKE.scaleIdentMat(vec3.getCPtr(scale)), true);
    if (AoceWrapperPINVOKE.SWIGPendingException.Pending) throw AoceWrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Mat4x4 scaleMat(Mat4x4 mat, vec3 scale) {
    Mat4x4 ret = new Mat4x4(AoceWrapperPINVOKE.scaleMat(Mat4x4.getCPtr(mat), vec3.getCPtr(scale)), true);
    if (AoceWrapperPINVOKE.SWIGPendingException.Pending) throw AoceWrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Mat4x4 saturateMat(Mat4x4 mat, float saturate) {
    Mat4x4 ret = new Mat4x4(AoceWrapperPINVOKE.saturateMat(Mat4x4.getCPtr(mat), saturate), true);
    if (AoceWrapperPINVOKE.SWIGPendingException.Pending) throw AoceWrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Mat4x4 xrotateMat(Mat4x4 mat, float rs, float rc) {
    Mat4x4 ret = new Mat4x4(AoceWrapperPINVOKE.xrotateMat(Mat4x4.getCPtr(mat), rs, rc), true);
    if (AoceWrapperPINVOKE.SWIGPendingException.Pending) throw AoceWrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Mat4x4 yrotateMat(Mat4x4 mat, float rs, float rc) {
    Mat4x4 ret = new Mat4x4(AoceWrapperPINVOKE.yrotateMat(Mat4x4.getCPtr(mat), rs, rc), true);
    if (AoceWrapperPINVOKE.SWIGPendingException.Pending) throw AoceWrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Mat4x4 zrotateMat(Mat4x4 mat, float rs, float rc) {
    Mat4x4 ret = new Mat4x4(AoceWrapperPINVOKE.zrotateMat(Mat4x4.getCPtr(mat), rs, rc), true);
    if (AoceWrapperPINVOKE.SWIGPendingException.Pending) throw AoceWrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Mat4x4 zshearMat(Mat4x4 mat, float dx, float dy) {
    Mat4x4 ret = new Mat4x4(AoceWrapperPINVOKE.zshearMat(Mat4x4.getCPtr(mat), dx, dy), true);
    if (AoceWrapperPINVOKE.SWIGPendingException.Pending) throw AoceWrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static Mat4x4 huerotateMat(Mat4x4 mat, float rot) {
    Mat4x4 ret = new Mat4x4(AoceWrapperPINVOKE.huerotateMat(Mat4x4.getCPtr(mat), rot), true);
    if (AoceWrapperPINVOKE.SWIGPendingException.Pending) throw AoceWrapperPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static void setLogObserver(ILogObserver observer) {
    AoceWrapperPINVOKE.setLogObserver(ILogObserver.getCPtr(observer));
  }

  public static bool checkLoadModel(string modelName) {
    bool ret = AoceWrapperPINVOKE.checkLoadModel(modelName);
    return ret;
  }

  public static PipeGraphFactory getPipeGraphFactory(GpuType gpuType) {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.getPipeGraphFactory((int)gpuType);
    PipeGraphFactory ret = (cPtr == global::System.IntPtr.Zero) ? null : new PipeGraphFactory(cPtr, false);
    return ret;
  }

  public static LayerFactory getLayerFactory(GpuType gpuType) {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.getLayerFactory((int)gpuType);
    LayerFactory ret = (cPtr == global::System.IntPtr.Zero) ? null : new LayerFactory(cPtr, false);
    return ret;
  }

  public static IVideoManager getVideoManager(CameraType cameraType) {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.getVideoManager((int)cameraType);
    IVideoManager ret = (cPtr == global::System.IntPtr.Zero) ? null : new IVideoManager(cPtr, false);
    return ret;
  }

  public static MediaFactory getMediaFactory(MediaType mediaType) {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.getMediaFactory((int)mediaType);
    MediaFactory ret = (cPtr == global::System.IntPtr.Zero) ? null : new MediaFactory(cPtr, false);
    return ret;
  }

  public static ILiveRoom getLiveRoom(LiveType liveType) {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.getLiveRoom((int)liveType);
    ILiveRoom ret = (cPtr == global::System.IntPtr.Zero) ? null : new ILiveRoom(cPtr, false);
    return ret;
  }

  public static IWindowManager getWindowManager(WindowType windowType) {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.getWindowManager((int)windowType);
    IWindowManager ret = (cPtr == global::System.IntPtr.Zero) ? null : new IWindowManager(cPtr, false);
    return ret;
  }

  public static ICaptureWindow getWindowCapture(CaptureType captureType) {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.getWindowCapture((int)captureType);
    ICaptureWindow ret = (cPtr == global::System.IntPtr.Zero) ? null : new ICaptureWindow(cPtr, false);
    return ret;
  }

  public static ILMetadata getLayerMetadata(string layerName) {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.getLayerMetadata(layerName);
    ILMetadata ret = (cPtr == global::System.IntPtr.Zero) ? null : new ILMetadata(cPtr, false);
    return ret;
  }

  public static ILGroupMetadata getLGroupMetadata(ILMetadata lmeta) {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.getLGroupMetadata(ILMetadata.getCPtr(lmeta));
    ILGroupMetadata ret = (cPtr == global::System.IntPtr.Zero) ? null : new ILGroupMetadata(cPtr, false);
    return ret;
  }

  public static ILBoolMetadata getLBoolMetadata(ILMetadata lmeta) {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.getLBoolMetadata(ILMetadata.getCPtr(lmeta));
    ILBoolMetadata ret = (cPtr == global::System.IntPtr.Zero) ? null : new ILBoolMetadata(cPtr, false);
    return ret;
  }

  public static ILStringMetadata getLStringMetadata(ILMetadata lmeta) {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.getLStringMetadata(ILMetadata.getCPtr(lmeta));
    ILStringMetadata ret = (cPtr == global::System.IntPtr.Zero) ? null : new ILStringMetadata(cPtr, false);
    return ret;
  }

  public static ILIntMetadata getLIntMetadata(ILMetadata lmeta) {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.getLIntMetadata(ILMetadata.getCPtr(lmeta));
    ILIntMetadata ret = (cPtr == global::System.IntPtr.Zero) ? null : new ILIntMetadata(cPtr, false);
    return ret;
  }

  public static ILFloatMetadata getLFloatMetadata(ILMetadata lmeta) {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.getLFloatMetadata(ILMetadata.getCPtr(lmeta));
    ILFloatMetadata ret = (cPtr == global::System.IntPtr.Zero) ? null : new ILFloatMetadata(cPtr, false);
    return ret;
  }

  public static AFloatLayer createBrightnessLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createBrightnessLayer();
    AFloatLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new AFloatLayer(cPtr, false);
    return ret;
  }

  public static AFloatLayer createExposureLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createExposureLayer();
    AFloatLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new AFloatLayer(cPtr, false);
    return ret;
  }

  public static AFloatLayer createContrastLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createContrastLayer();
    AFloatLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new AFloatLayer(cPtr, false);
    return ret;
  }

  public static AFloatLayer createSaturationLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createSaturationLayer();
    AFloatLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new AFloatLayer(cPtr, false);
    return ret;
  }

  public static AFloatLayer createGammaLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createGammaLayer();
    AFloatLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new AFloatLayer(cPtr, false);
    return ret;
  }

  public static AFloatLayer createSolarizeLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createSolarizeLayer();
    AFloatLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new AFloatLayer(cPtr, false);
    return ret;
  }

  public static ILevelsLayer createLevelsLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createLevelsLayer();
    ILevelsLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new ILevelsLayer(cPtr, false);
    return ret;
  }

  public static IColorMatrixLayer createColorMatrixLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createColorMatrixLayer();
    IColorMatrixLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IColorMatrixLayer(cPtr, false);
    return ret;
  }

  public static IRGBLayer createRGBLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createRGBLayer();
    IRGBLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IRGBLayer(cPtr, false);
    return ret;
  }

  public static AFloatLayer createHueLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createHueLayer();
    AFloatLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new AFloatLayer(cPtr, false);
    return ret;
  }

  public static AFloatLayer createVibranceLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createVibranceLayer();
    AFloatLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new AFloatLayer(cPtr, false);
    return ret;
  }

  public static IWhiteBalanceLayer createBalanceLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createBalanceLayer();
    IWhiteBalanceLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IWhiteBalanceLayer(cPtr, false);
    return ret;
  }

  public static IHighlightShadowLayer createHighlightShadowLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createHighlightShadowLayer();
    IHighlightShadowLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IHighlightShadowLayer(cPtr, false);
    return ret;
  }

  public static IHighlightShadowTintLayer createHighlightShadowTintLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createHighlightShadowTintLayer();
    IHighlightShadowTintLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IHighlightShadowTintLayer(cPtr, false);
    return ret;
  }

  public static ILookupLayer createLookupLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createLookupLayer();
    ILookupLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new ILookupLayer(cPtr, false);
    return ret;
  }

  public static ISoftEleganceLayer createSoftEleganceLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createSoftEleganceLayer();
    ISoftEleganceLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new ISoftEleganceLayer(cPtr, false);
    return ret;
  }

  public static ISkinToneLayer createSkinToneLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createSkinToneLayer();
    ISkinToneLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new ISkinToneLayer(cPtr, false);
    return ret;
  }

  public static IBaseLayer createColorInvertLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createColorInvertLayer();
    IBaseLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IBaseLayer(cPtr, false);
    return ret;
  }

  public static IBaseLayer createLuminanceLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createLuminanceLayer();
    IBaseLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IBaseLayer(cPtr, false);
    return ret;
  }

  public static IMonochromeLayer createMonochromeLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createMonochromeLayer();
    IMonochromeLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IMonochromeLayer(cPtr, false);
    return ret;
  }

  public static IFalseColorLayer createFalseColorLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createFalseColorLayer();
    IFalseColorLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IFalseColorLayer(cPtr, false);
    return ret;
  }

  public static IHazeLayer createHazeLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createHazeLayer();
    IHazeLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IHazeLayer(cPtr, false);
    return ret;
  }

  public static AFloatLayer createSepiaLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createSepiaLayer();
    AFloatLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new AFloatLayer(cPtr, false);
    return ret;
  }

  public static AFloatLayer createOpacityLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createOpacityLayer();
    AFloatLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new AFloatLayer(cPtr, false);
    return ret;
  }

  public static AFloatLayer createLuminanceThresholdLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createLuminanceThresholdLayer();
    AFloatLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new AFloatLayer(cPtr, false);
    return ret;
  }

  public static IAdaptiveThresholdLayer createAdaptiveThresholdLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createAdaptiveThresholdLayer();
    IAdaptiveThresholdLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IAdaptiveThresholdLayer(cPtr, false);
    return ret;
  }

  public static AFloatLayer createAverageLuminanceThresholdLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createAverageLuminanceThresholdLayer();
    AFloatLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new AFloatLayer(cPtr, false);
    return ret;
  }

  public static IBaseLayer createHistogramLayer(bool bSingle) {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createHistogramLayer(bSingle);
    IBaseLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IBaseLayer(cPtr, false);
    return ret;
  }

  public static IChromaKeyLayer createChromaKeyLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createChromaKeyLayer();
    IChromaKeyLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IChromaKeyLayer(cPtr, false);
    return ret;
  }

  public static IHSBLayer createHSBLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createHSBLayer();
    IHSBLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IHSBLayer(cPtr, false);
    return ret;
  }

  public static ICropLayer createCropLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createCropLayer();
    ICropLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new ICropLayer(cPtr, false);
    return ret;
  }

  public static ISharpenLayer createSharpenLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createSharpenLayer();
    ISharpenLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new ISharpenLayer(cPtr, false);
    return ret;
  }

  public static IUnsharpMaskLayer createUnsharpMaskLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createUnsharpMaskLayer();
    IUnsharpMaskLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IUnsharpMaskLayer(cPtr, false);
    return ret;
  }

  public static IGaussianBlurLayer createGaussianBlurLayer(ImageType imageType) {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createGaussianBlurLayer((int)imageType);
    IGaussianBlurLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IGaussianBlurLayer(cPtr, false);
    return ret;
  }

  public static IKernelSizeLayer createBoxFilterLayer(ImageType imageType) {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createBoxFilterLayer((int)imageType);
    IKernelSizeLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IKernelSizeLayer(cPtr, false);
    return ret;
  }

  public static IBlurSelectiveLayer createBlurSelectiveLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createBlurSelectiveLayer();
    IBlurSelectiveLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IBlurSelectiveLayer(cPtr, false);
    return ret;
  }

  public static IBlurPositionLayer createBlurPositionLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createBlurPositionLayer();
    IBlurPositionLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IBlurPositionLayer(cPtr, false);
    return ret;
  }

  public static IIOSBlurLayer createIOSBlurLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createIOSBlurLayer();
    IIOSBlurLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IIOSBlurLayer(cPtr, false);
    return ret;
  }

  public static IMedianLayer createMedianLayer(bool bSingle) {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createMedianLayer(bSingle);
    IMedianLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IMedianLayer(cPtr, false);
    return ret;
  }

  public static IBaseLayer createMedianK3Layer(bool bSingle) {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createMedianK3Layer(bSingle);
    IBaseLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IBaseLayer(cPtr, false);
    return ret;
  }

  public static IBilateralLayer createBilateralLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createBilateralLayer();
    IBilateralLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IBilateralLayer(cPtr, false);
    return ret;
  }

  public static ITiltShiftLayer createTiltShiftLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createTiltShiftLayer();
    ITiltShiftLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new ITiltShiftLayer(cPtr, false);
    return ret;
  }

  public static I3x3ConvolutionLayer create3x3ConvolutionLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.create3x3ConvolutionLayer();
    I3x3ConvolutionLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new I3x3ConvolutionLayer(cPtr, false);
    return ret;
  }

  public static AFloatLayer createSobelEdgeDetectionLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createSobelEdgeDetectionLayer();
    AFloatLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new AFloatLayer(cPtr, false);
    return ret;
  }

  public static AFloatLayer createPrewittEdgeDetectionLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createPrewittEdgeDetectionLayer();
    AFloatLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new AFloatLayer(cPtr, false);
    return ret;
  }

  public static IThresholdSobelLayer createThresholdEdgeDetectionLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createThresholdEdgeDetectionLayer();
    IThresholdSobelLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IThresholdSobelLayer(cPtr, false);
    return ret;
  }

  public static ICannyEdgeDetectionLayer createCannyEdgeDetectionLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createCannyEdgeDetectionLayer();
    ICannyEdgeDetectionLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new ICannyEdgeDetectionLayer(cPtr, false);
    return ret;
  }

  public static IHarrisCornerDetectionLayer createHarrisCornerDetectionLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createHarrisCornerDetectionLayer();
    IHarrisCornerDetectionLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IHarrisCornerDetectionLayer(cPtr, false);
    return ret;
  }

  public static INobleCornerDetectionLayer createNobleCornerDetectionLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createNobleCornerDetectionLayer();
    INobleCornerDetectionLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new INobleCornerDetectionLayer(cPtr, false);
    return ret;
  }

  public static INobleCornerDetectionLayer createShiTomasiFeatureDetectionLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createShiTomasiFeatureDetectionLayer();
    INobleCornerDetectionLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new INobleCornerDetectionLayer(cPtr, false);
    return ret;
  }

  public static IFASTFeatureLayer createColourFASTFeatureDetector() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createColourFASTFeatureDetector();
    IFASTFeatureLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IFASTFeatureLayer(cPtr, false);
    return ret;
  }

  public static IMorphLayer createDilationLayer(bool bSingle) {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createDilationLayer(bSingle);
    IMorphLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IMorphLayer(cPtr, false);
    return ret;
  }

  public static IMorphLayer createErosionLayer(bool bSingle) {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createErosionLayer(bSingle);
    IMorphLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IMorphLayer(cPtr, false);
    return ret;
  }

  public static IMorphLayer createClosingLayer(bool bSingle) {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createClosingLayer(bSingle);
    IMorphLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IMorphLayer(cPtr, false);
    return ret;
  }

  public static IMorphLayer createOpeningLayer(bool bSingle) {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createOpeningLayer(bSingle);
    IMorphLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IMorphLayer(cPtr, false);
    return ret;
  }

  public static IBaseLayer createColorLBPLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createColorLBPLayer();
    IBaseLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IBaseLayer(cPtr, false);
    return ret;
  }

  public static AFloatLayer createLowPassLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createLowPassLayer();
    AFloatLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new AFloatLayer(cPtr, false);
    return ret;
  }

  public static AFloatLayer createHighPassLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createHighPassLayer();
    AFloatLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new AFloatLayer(cPtr, false);
    return ret;
  }

  public static IMotionDetectorLayer createMotionDetectorLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createMotionDetectorLayer();
    IMotionDetectorLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IMotionDetectorLayer(cPtr, false);
    return ret;
  }

  public static IMotionBlurLayer createMotionBlurLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createMotionBlurLayer();
    IMotionBlurLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IMotionBlurLayer(cPtr, false);
    return ret;
  }

  public static IZoomBlurLayer createZoomBlurLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createZoomBlurLayer();
    IZoomBlurLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IZoomBlurLayer(cPtr, false);
    return ret;
  }

  public static IGuidedLayer createGuidedLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createGuidedLayer();
    IGuidedLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IGuidedLayer(cPtr, false);
    return ret;
  }

  public static IBaseLayer createLaplacianLayer(bool bsamll) {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createLaplacianLayer(bsamll);
    IBaseLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IBaseLayer(cPtr, false);
    return ret;
  }

  public static AFloatLayer createDissolveBlendLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createDissolveBlendLayer();
    AFloatLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new AFloatLayer(cPtr, false);
    return ret;
  }

  public static IBaseLayer createMultiplyBlendLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createMultiplyBlendLayer();
    IBaseLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IBaseLayer(cPtr, false);
    return ret;
  }

  public static IBaseLayer createAddBlendLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createAddBlendLayer();
    IBaseLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IBaseLayer(cPtr, false);
    return ret;
  }

  public static IBaseLayer createSubtractBlendLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createSubtractBlendLayer();
    IBaseLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IBaseLayer(cPtr, false);
    return ret;
  }

  public static IBaseLayer createDivideBlendLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createDivideBlendLayer();
    IBaseLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IBaseLayer(cPtr, false);
    return ret;
  }

  public static IBaseLayer createOverlayBlendLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createOverlayBlendLayer();
    IBaseLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IBaseLayer(cPtr, false);
    return ret;
  }

  public static IBaseLayer createDarkenBlendLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createDarkenBlendLayer();
    IBaseLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IBaseLayer(cPtr, false);
    return ret;
  }

  public static IBaseLayer createLightenBlendLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createLightenBlendLayer();
    IBaseLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IBaseLayer(cPtr, false);
    return ret;
  }

  public static IBaseLayer createColorBurnBlendLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createColorBurnBlendLayer();
    IBaseLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IBaseLayer(cPtr, false);
    return ret;
  }

  public static IBaseLayer createColorDodgeBlendLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createColorDodgeBlendLayer();
    IBaseLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IBaseLayer(cPtr, false);
    return ret;
  }

  public static IBaseLayer createScreenBlendLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createScreenBlendLayer();
    IBaseLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IBaseLayer(cPtr, false);
    return ret;
  }

  public static IBaseLayer createExclusionBlendLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createExclusionBlendLayer();
    IBaseLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IBaseLayer(cPtr, false);
    return ret;
  }

  public static IBaseLayer createDifferenceBlendLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createDifferenceBlendLayer();
    IBaseLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IBaseLayer(cPtr, false);
    return ret;
  }

  public static IBaseLayer createHardLightBlendLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createHardLightBlendLayer();
    IBaseLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IBaseLayer(cPtr, false);
    return ret;
  }

  public static IBaseLayer createSoftLightBlendLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createSoftLightBlendLayer();
    IBaseLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IBaseLayer(cPtr, false);
    return ret;
  }

  public static AFloatLayer createAlphaBlendLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createAlphaBlendLayer();
    AFloatLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new AFloatLayer(cPtr, false);
    return ret;
  }

  public static IBaseLayer createSourceOverBlendLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createSourceOverBlendLayer();
    IBaseLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IBaseLayer(cPtr, false);
    return ret;
  }

  public static IBaseLayer createNormalBlendLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createNormalBlendLayer();
    IBaseLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IBaseLayer(cPtr, false);
    return ret;
  }

  public static IBaseLayer createColorBlendLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createColorBlendLayer();
    IBaseLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IBaseLayer(cPtr, false);
    return ret;
  }

  public static IBaseLayer createHueBlendLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createHueBlendLayer();
    IBaseLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IBaseLayer(cPtr, false);
    return ret;
  }

  public static IBaseLayer createSaturationBlendLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createSaturationBlendLayer();
    IBaseLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IBaseLayer(cPtr, false);
    return ret;
  }

  public static IBaseLayer createLuminosityBlendLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createLuminosityBlendLayer();
    IBaseLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IBaseLayer(cPtr, false);
    return ret;
  }

  public static IBaseLayer createLinearBurnBlendLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createLinearBurnBlendLayer();
    IBaseLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IBaseLayer(cPtr, false);
    return ret;
  }

  public static IPoissonLayer createPoissonBlendLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createPoissonBlendLayer();
    IPoissonLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IPoissonLayer(cPtr, false);
    return ret;
  }

  public static IBaseLayer createMaskLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createMaskLayer();
    IBaseLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IBaseLayer(cPtr, false);
    return ret;
  }

  public static IPixellateLayer createPixellateLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createPixellateLayer();
    IPixellateLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IPixellateLayer(cPtr, false);
    return ret;
  }

  public static IPolarPixellateLayer createPolarPixellateLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createPolarPixellateLayer();
    IPolarPixellateLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IPolarPixellateLayer(cPtr, false);
    return ret;
  }

  public static ISelectiveLayer createPixellatePositionLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createPixellatePositionLayer();
    ISelectiveLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new ISelectiveLayer(cPtr, false);
    return ret;
  }

  public static IPolkaDotLayer createPolkaDotLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createPolkaDotLayer();
    IPolkaDotLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IPolkaDotLayer(cPtr, false);
    return ret;
  }

  public static IPixellateLayer createHalftoneLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createHalftoneLayer();
    IPixellateLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IPixellateLayer(cPtr, false);
    return ret;
  }

  public static ICrosshatchLayer createCrosshatchLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createCrosshatchLayer();
    ICrosshatchLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new ICrosshatchLayer(cPtr, false);
    return ret;
  }

  public static AFloatLayer createSketchLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createSketchLayer();
    AFloatLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new AFloatLayer(cPtr, false);
    return ret;
  }

  public static IThresholdSobelLayer createThresholdSketchLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createThresholdSketchLayer();
    IThresholdSobelLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IThresholdSobelLayer(cPtr, false);
    return ret;
  }

  public static IToonLayer createToonLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createToonLayer();
    IToonLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IToonLayer(cPtr, false);
    return ret;
  }

  public static ISmoothToonLayer createSmoothToonLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createSmoothToonLayer();
    ISmoothToonLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new ISmoothToonLayer(cPtr, false);
    return ret;
  }

  public static AFloatLayer createEmbossLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createEmbossLayer();
    AFloatLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new AFloatLayer(cPtr, false);
    return ret;
  }

  public static IMedianLayer createPosterizeLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createPosterizeLayer();
    IMedianLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IMedianLayer(cPtr, false);
    return ret;
  }

  public static ISwirlLayer createSwirlLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createSwirlLayer();
    ISwirlLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new ISwirlLayer(cPtr, false);
    return ret;
  }

  public static IDistortionLayer createBulgeDistortionLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createBulgeDistortionLayer();
    IDistortionLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IDistortionLayer(cPtr, false);
    return ret;
  }

  public static IDistortionLayer createPinchDistortionLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createPinchDistortionLayer();
    IDistortionLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IDistortionLayer(cPtr, false);
    return ret;
  }

  public static IStretchDistortionLayer createStretchDistortionLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createStretchDistortionLayer();
    IStretchDistortionLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IStretchDistortionLayer(cPtr, false);
    return ret;
  }

  public static ISphereRefractionLayer createSphereRefractionLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createSphereRefractionLayer();
    ISphereRefractionLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new ISphereRefractionLayer(cPtr, false);
    return ret;
  }

  public static ISphereRefractionLayer createGlassSphereLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createGlassSphereLayer();
    ISphereRefractionLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new ISphereRefractionLayer(cPtr, false);
    return ret;
  }

  public static IVignetteLayer createVignetteLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createVignetteLayer();
    IVignetteLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IVignetteLayer(cPtr, false);
    return ret;
  }

  public static IMedianLayer createKuwaharaLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createKuwaharaLayer();
    IMedianLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IMedianLayer(cPtr, false);
    return ret;
  }

  public static IPerlinNoiseLayer createPerlinNoiseLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createPerlinNoiseLayer();
    IPerlinNoiseLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IPerlinNoiseLayer(cPtr, false);
    return ret;
  }

  public static IBaseLayer createCGAColorspaceLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createCGAColorspaceLayer();
    IBaseLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IBaseLayer(cPtr, false);
    return ret;
  }

  public static IBaseLayer createVoronoiConsumerLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createVoronoiConsumerLayer();
    IBaseLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IBaseLayer(cPtr, false);
    return ret;
  }

  public static ISizeScaleLayer createSizeScaleLayer(ImageType imageType) {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createSizeScaleLayer((int)imageType);
    ISizeScaleLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new ISizeScaleLayer(cPtr, false);
    return ret;
  }

  public static IReSizeLayer createResizeLayer(ImageType imageType) {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createResizeLayer((int)imageType);
    IReSizeLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IReSizeLayer(cPtr, false);
    return ret;
  }

  public static IBaseLayer createAlphaShowLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createAlphaShowLayer();
    IBaseLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IBaseLayer(cPtr, false);
    return ret;
  }

  public static IBaseLayer createAlphaShow2Layer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createAlphaShow2Layer();
    IBaseLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IBaseLayer(cPtr, false);
    return ret;
  }

  public static IBaseLayer createConvertImageLayer() {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.createConvertImageLayer();
    IBaseLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IBaseLayer(cPtr, false);
    return ret;
  }

  public static readonly int AOCE_VIDEO_MAX_NAME = AoceWrapperPINVOKE.AOCE_VIDEO_MAX_NAME_get();
}
