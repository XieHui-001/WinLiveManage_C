//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class IMediaPlayerObserver : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal IMediaPlayerObserver(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(IMediaPlayerObserver obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~IMediaPlayerObserver() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          AoceWrapperPINVOKE.delete_IMediaPlayerObserver(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public virtual void onPrepared() {
    if (SwigDerivedClassHasMethod("onPrepared", swigMethodTypes0)) AoceWrapperPINVOKE.IMediaPlayerObserver_onPreparedSwigExplicitIMediaPlayerObserver(swigCPtr); else AoceWrapperPINVOKE.IMediaPlayerObserver_onPrepared(swigCPtr);
  }

  public virtual void onError(PlayStatus staus, int code, string msg) {
    if (SwigDerivedClassHasMethod("onError", swigMethodTypes1)) AoceWrapperPINVOKE.IMediaPlayerObserver_onErrorSwigExplicitIMediaPlayerObserver(swigCPtr, (int)staus, code, msg); else AoceWrapperPINVOKE.IMediaPlayerObserver_onError(swigCPtr, (int)staus, code, msg);
  }

  public virtual void onVideoFrame(VideoFrame frame) {
    if (SwigDerivedClassHasMethod("onVideoFrame", swigMethodTypes2)) AoceWrapperPINVOKE.IMediaPlayerObserver_onVideoFrameSwigExplicitIMediaPlayerObserver(swigCPtr, VideoFrame.getCPtr(frame)); else AoceWrapperPINVOKE.IMediaPlayerObserver_onVideoFrame(swigCPtr, VideoFrame.getCPtr(frame));
    if (AoceWrapperPINVOKE.SWIGPendingException.Pending) throw AoceWrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void onAudioFrame(AudioFrame frame) {
    if (SwigDerivedClassHasMethod("onAudioFrame", swigMethodTypes3)) AoceWrapperPINVOKE.IMediaPlayerObserver_onAudioFrameSwigExplicitIMediaPlayerObserver(swigCPtr, AudioFrame.getCPtr(frame)); else AoceWrapperPINVOKE.IMediaPlayerObserver_onAudioFrame(swigCPtr, AudioFrame.getCPtr(frame));
    if (AoceWrapperPINVOKE.SWIGPendingException.Pending) throw AoceWrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void onStop() {
    if (SwigDerivedClassHasMethod("onStop", swigMethodTypes4)) AoceWrapperPINVOKE.IMediaPlayerObserver_onStopSwigExplicitIMediaPlayerObserver(swigCPtr); else AoceWrapperPINVOKE.IMediaPlayerObserver_onStop(swigCPtr);
  }

  public virtual void onComplate() {
    if (SwigDerivedClassHasMethod("onComplate", swigMethodTypes5)) AoceWrapperPINVOKE.IMediaPlayerObserver_onComplateSwigExplicitIMediaPlayerObserver(swigCPtr); else AoceWrapperPINVOKE.IMediaPlayerObserver_onComplate(swigCPtr);
  }

  public IMediaPlayerObserver() : this(AoceWrapperPINVOKE.new_IMediaPlayerObserver(), true) {
    SwigDirectorConnect();
  }

  private void SwigDirectorConnect() {
    if (SwigDerivedClassHasMethod("onPrepared", swigMethodTypes0))
      swigDelegate0 = new SwigDelegateIMediaPlayerObserver_0(SwigDirectorMethodonPrepared);
    if (SwigDerivedClassHasMethod("onError", swigMethodTypes1))
      swigDelegate1 = new SwigDelegateIMediaPlayerObserver_1(SwigDirectorMethodonError);
    if (SwigDerivedClassHasMethod("onVideoFrame", swigMethodTypes2))
      swigDelegate2 = new SwigDelegateIMediaPlayerObserver_2(SwigDirectorMethodonVideoFrame);
    if (SwigDerivedClassHasMethod("onAudioFrame", swigMethodTypes3))
      swigDelegate3 = new SwigDelegateIMediaPlayerObserver_3(SwigDirectorMethodonAudioFrame);
    if (SwigDerivedClassHasMethod("onStop", swigMethodTypes4))
      swigDelegate4 = new SwigDelegateIMediaPlayerObserver_4(SwigDirectorMethodonStop);
    if (SwigDerivedClassHasMethod("onComplate", swigMethodTypes5))
      swigDelegate5 = new SwigDelegateIMediaPlayerObserver_5(SwigDirectorMethodonComplate);
    AoceWrapperPINVOKE.IMediaPlayerObserver_director_connect(swigCPtr, swigDelegate0, swigDelegate1, swigDelegate2, swigDelegate3, swigDelegate4, swigDelegate5);
  }

  private bool SwigDerivedClassHasMethod(string methodName, global::System.Type[] methodTypes) {
    global::System.Reflection.MethodInfo methodInfo = this.GetType().GetMethod(methodName, global::System.Reflection.BindingFlags.Public | global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Instance, null, methodTypes, null);
    bool hasDerivedMethod = methodInfo.DeclaringType.IsSubclassOf(typeof(IMediaPlayerObserver));
    return hasDerivedMethod;
  }

  private void SwigDirectorMethodonPrepared() {
    onPrepared();
  }

  private void SwigDirectorMethodonError(int staus, int code, string msg) {
    onError((PlayStatus)staus, code, msg);
  }

  private void SwigDirectorMethodonVideoFrame(global::System.IntPtr frame) {
    onVideoFrame(new VideoFrame(frame, false));
  }

  private void SwigDirectorMethodonAudioFrame(global::System.IntPtr frame) {
    onAudioFrame(new AudioFrame(frame, false));
  }

  private void SwigDirectorMethodonStop() {
    onStop();
  }

  private void SwigDirectorMethodonComplate() {
    onComplate();
  }

  public delegate void SwigDelegateIMediaPlayerObserver_0();
  public delegate void SwigDelegateIMediaPlayerObserver_1(int staus, int code, string msg);
  public delegate void SwigDelegateIMediaPlayerObserver_2(global::System.IntPtr frame);
  public delegate void SwigDelegateIMediaPlayerObserver_3(global::System.IntPtr frame);
  public delegate void SwigDelegateIMediaPlayerObserver_4();
  public delegate void SwigDelegateIMediaPlayerObserver_5();

  private SwigDelegateIMediaPlayerObserver_0 swigDelegate0;
  private SwigDelegateIMediaPlayerObserver_1 swigDelegate1;
  private SwigDelegateIMediaPlayerObserver_2 swigDelegate2;
  private SwigDelegateIMediaPlayerObserver_3 swigDelegate3;
  private SwigDelegateIMediaPlayerObserver_4 swigDelegate4;
  private SwigDelegateIMediaPlayerObserver_5 swigDelegate5;

  private static global::System.Type[] swigMethodTypes0 = new global::System.Type[] {  };
  private static global::System.Type[] swigMethodTypes1 = new global::System.Type[] { typeof(PlayStatus), typeof(int), typeof(string) };
  private static global::System.Type[] swigMethodTypes2 = new global::System.Type[] { typeof(VideoFrame) };
  private static global::System.Type[] swigMethodTypes3 = new global::System.Type[] { typeof(AudioFrame) };
  private static global::System.Type[] swigMethodTypes4 = new global::System.Type[] {  };
  private static global::System.Type[] swigMethodTypes5 = new global::System.Type[] {  };
}
