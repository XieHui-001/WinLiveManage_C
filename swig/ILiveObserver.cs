//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class ILiveObserver : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal ILiveObserver(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(ILiveObserver obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~ILiveObserver() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          AoceWrapperPINVOKE.delete_ILiveObserver(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public virtual void onEvent(int operater, int code, LogLevel level, string msg) {
    if (SwigDerivedClassHasMethod("onEvent", swigMethodTypes0)) AoceWrapperPINVOKE.ILiveObserver_onEventSwigExplicitILiveObserver(swigCPtr, operater, code, (int)level, msg); else AoceWrapperPINVOKE.ILiveObserver_onEvent(swigCPtr, operater, code, (int)level, msg);
  }

  public virtual void onInitRoom() {
    if (SwigDerivedClassHasMethod("onInitRoom", swigMethodTypes1)) AoceWrapperPINVOKE.ILiveObserver_onInitRoomSwigExplicitILiveObserver(swigCPtr); else AoceWrapperPINVOKE.ILiveObserver_onInitRoom(swigCPtr);
  }

  public virtual void onLoginRoom(bool bReConnect) {
    if (SwigDerivedClassHasMethod("onLoginRoom", swigMethodTypes2)) AoceWrapperPINVOKE.ILiveObserver_onLoginRoomSwigExplicitILiveObserver__SWIG_0(swigCPtr, bReConnect); else AoceWrapperPINVOKE.ILiveObserver_onLoginRoom__SWIG_0(swigCPtr, bReConnect);
  }

  public virtual void onLoginRoom() {
    if (SwigDerivedClassHasMethod("onLoginRoom", swigMethodTypes3)) AoceWrapperPINVOKE.ILiveObserver_onLoginRoomSwigExplicitILiveObserver__SWIG_1(swigCPtr); else AoceWrapperPINVOKE.ILiveObserver_onLoginRoom__SWIG_1(swigCPtr);
  }

  public virtual void onUserChange(int userId, bool bAdd) {
    if (SwigDerivedClassHasMethod("onUserChange", swigMethodTypes4)) AoceWrapperPINVOKE.ILiveObserver_onUserChangeSwigExplicitILiveObserver(swigCPtr, userId, bAdd); else AoceWrapperPINVOKE.ILiveObserver_onUserChange(swigCPtr, userId, bAdd);
  }

  public virtual void onStreamUpdate(int index, bool bAdd, int code) {
    if (SwigDerivedClassHasMethod("onStreamUpdate", swigMethodTypes5)) AoceWrapperPINVOKE.ILiveObserver_onStreamUpdateSwigExplicitILiveObserver__SWIG_0(swigCPtr, index, bAdd, code); else AoceWrapperPINVOKE.ILiveObserver_onStreamUpdate__SWIG_0(swigCPtr, index, bAdd, code);
  }

  public virtual void onStreamUpdate(int userId, int index, bool bAdd, int code) {
    if (SwigDerivedClassHasMethod("onStreamUpdate", swigMethodTypes6)) AoceWrapperPINVOKE.ILiveObserver_onStreamUpdateSwigExplicitILiveObserver__SWIG_1(swigCPtr, userId, index, bAdd, code); else AoceWrapperPINVOKE.ILiveObserver_onStreamUpdate__SWIG_1(swigCPtr, userId, index, bAdd, code);
  }

  public virtual void onVideoFrame(int userId, int index, VideoFrame videoFrame) {
    if (SwigDerivedClassHasMethod("onVideoFrame", swigMethodTypes7)) AoceWrapperPINVOKE.ILiveObserver_onVideoFrameSwigExplicitILiveObserver(swigCPtr, userId, index, VideoFrame.getCPtr(videoFrame)); else AoceWrapperPINVOKE.ILiveObserver_onVideoFrame(swigCPtr, userId, index, VideoFrame.getCPtr(videoFrame));
    if (AoceWrapperPINVOKE.SWIGPendingException.Pending) throw AoceWrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void onAudioFrame(int userId, int index, AudioFrame audioFrame) {
    if (SwigDerivedClassHasMethod("onAudioFrame", swigMethodTypes8)) AoceWrapperPINVOKE.ILiveObserver_onAudioFrameSwigExplicitILiveObserver(swigCPtr, userId, index, AudioFrame.getCPtr(audioFrame)); else AoceWrapperPINVOKE.ILiveObserver_onAudioFrame(swigCPtr, userId, index, AudioFrame.getCPtr(audioFrame));
    if (AoceWrapperPINVOKE.SWIGPendingException.Pending) throw AoceWrapperPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void onPlayVolume(int userId, int index, float volume) {
    if (SwigDerivedClassHasMethod("onPlayVolume", swigMethodTypes9)) AoceWrapperPINVOKE.ILiveObserver_onPlayVolumeSwigExplicitILiveObserver(swigCPtr, userId, index, volume); else AoceWrapperPINVOKE.ILiveObserver_onPlayVolume(swigCPtr, userId, index, volume);
  }

  public virtual void onPushQuality(int index, int quality, float fps, float kbs) {
    if (SwigDerivedClassHasMethod("onPushQuality", swigMethodTypes10)) AoceWrapperPINVOKE.ILiveObserver_onPushQualitySwigExplicitILiveObserver(swigCPtr, index, quality, fps, kbs); else AoceWrapperPINVOKE.ILiveObserver_onPushQuality(swigCPtr, index, quality, fps, kbs);
  }

  public virtual void onPullQuality(int userId, int index, int quality, float fps, float kbs) {
    if (SwigDerivedClassHasMethod("onPullQuality", swigMethodTypes11)) AoceWrapperPINVOKE.ILiveObserver_onPullQualitySwigExplicitILiveObserver(swigCPtr, userId, index, quality, fps, kbs); else AoceWrapperPINVOKE.ILiveObserver_onPullQuality(swigCPtr, userId, index, quality, fps, kbs);
  }

  public virtual void onLogoutRoom() {
    if (SwigDerivedClassHasMethod("onLogoutRoom", swigMethodTypes12)) AoceWrapperPINVOKE.ILiveObserver_onLogoutRoomSwigExplicitILiveObserver(swigCPtr); else AoceWrapperPINVOKE.ILiveObserver_onLogoutRoom(swigCPtr);
  }

  public ILiveObserver() : this(AoceWrapperPINVOKE.new_ILiveObserver(), true) {
    SwigDirectorConnect();
  }

  private void SwigDirectorConnect() {
    if (SwigDerivedClassHasMethod("onEvent", swigMethodTypes0))
      swigDelegate0 = new SwigDelegateILiveObserver_0(SwigDirectorMethodonEvent);
    if (SwigDerivedClassHasMethod("onInitRoom", swigMethodTypes1))
      swigDelegate1 = new SwigDelegateILiveObserver_1(SwigDirectorMethodonInitRoom);
    if (SwigDerivedClassHasMethod("onLoginRoom", swigMethodTypes2))
      swigDelegate2 = new SwigDelegateILiveObserver_2(SwigDirectorMethodonLoginRoom__SWIG_0);
    if (SwigDerivedClassHasMethod("onLoginRoom", swigMethodTypes3))
      swigDelegate3 = new SwigDelegateILiveObserver_3(SwigDirectorMethodonLoginRoom__SWIG_1);
    if (SwigDerivedClassHasMethod("onUserChange", swigMethodTypes4))
      swigDelegate4 = new SwigDelegateILiveObserver_4(SwigDirectorMethodonUserChange);
    if (SwigDerivedClassHasMethod("onStreamUpdate", swigMethodTypes5))
      swigDelegate5 = new SwigDelegateILiveObserver_5(SwigDirectorMethodonStreamUpdate__SWIG_0);
    if (SwigDerivedClassHasMethod("onStreamUpdate", swigMethodTypes6))
      swigDelegate6 = new SwigDelegateILiveObserver_6(SwigDirectorMethodonStreamUpdate__SWIG_1);
    if (SwigDerivedClassHasMethod("onVideoFrame", swigMethodTypes7))
      swigDelegate7 = new SwigDelegateILiveObserver_7(SwigDirectorMethodonVideoFrame);
    if (SwigDerivedClassHasMethod("onAudioFrame", swigMethodTypes8))
      swigDelegate8 = new SwigDelegateILiveObserver_8(SwigDirectorMethodonAudioFrame);
    if (SwigDerivedClassHasMethod("onPlayVolume", swigMethodTypes9))
      swigDelegate9 = new SwigDelegateILiveObserver_9(SwigDirectorMethodonPlayVolume);
    if (SwigDerivedClassHasMethod("onPushQuality", swigMethodTypes10))
      swigDelegate10 = new SwigDelegateILiveObserver_10(SwigDirectorMethodonPushQuality);
    if (SwigDerivedClassHasMethod("onPullQuality", swigMethodTypes11))
      swigDelegate11 = new SwigDelegateILiveObserver_11(SwigDirectorMethodonPullQuality);
    if (SwigDerivedClassHasMethod("onLogoutRoom", swigMethodTypes12))
      swigDelegate12 = new SwigDelegateILiveObserver_12(SwigDirectorMethodonLogoutRoom);
    AoceWrapperPINVOKE.ILiveObserver_director_connect(swigCPtr, swigDelegate0, swigDelegate1, swigDelegate2, swigDelegate3, swigDelegate4, swigDelegate5, swigDelegate6, swigDelegate7, swigDelegate8, swigDelegate9, swigDelegate10, swigDelegate11, swigDelegate12);
  }

  private bool SwigDerivedClassHasMethod(string methodName, global::System.Type[] methodTypes) {
    global::System.Reflection.MethodInfo methodInfo = this.GetType().GetMethod(methodName, global::System.Reflection.BindingFlags.Public | global::System.Reflection.BindingFlags.NonPublic | global::System.Reflection.BindingFlags.Instance, null, methodTypes, null);
    bool hasDerivedMethod = methodInfo.DeclaringType.IsSubclassOf(typeof(ILiveObserver));
    return hasDerivedMethod;
  }

  private void SwigDirectorMethodonEvent(int operater, int code, int level, string msg) {
    onEvent(operater, code, (LogLevel)level, msg);
  }

  private void SwigDirectorMethodonInitRoom() {
    onInitRoom();
  }

  private void SwigDirectorMethodonLoginRoom__SWIG_0(bool bReConnect) {
    onLoginRoom(bReConnect);
  }

  private void SwigDirectorMethodonLoginRoom__SWIG_1() {
    onLoginRoom();
  }

  private void SwigDirectorMethodonUserChange(int userId, bool bAdd) {
    onUserChange(userId, bAdd);
  }

  private void SwigDirectorMethodonStreamUpdate__SWIG_0(int index, bool bAdd, int code) {
    onStreamUpdate(index, bAdd, code);
  }

  private void SwigDirectorMethodonStreamUpdate__SWIG_1(int userId, int index, bool bAdd, int code) {
    onStreamUpdate(userId, index, bAdd, code);
  }

  private void SwigDirectorMethodonVideoFrame(int userId, int index, global::System.IntPtr videoFrame) {
    onVideoFrame(userId, index, new VideoFrame(videoFrame, false));
  }

  private void SwigDirectorMethodonAudioFrame(int userId, int index, global::System.IntPtr audioFrame) {
    onAudioFrame(userId, index, new AudioFrame(audioFrame, false));
  }

  private void SwigDirectorMethodonPlayVolume(int userId, int index, float volume) {
    onPlayVolume(userId, index, volume);
  }

  private void SwigDirectorMethodonPushQuality(int index, int quality, float fps, float kbs) {
    onPushQuality(index, quality, fps, kbs);
  }

  private void SwigDirectorMethodonPullQuality(int userId, int index, int quality, float fps, float kbs) {
    onPullQuality(userId, index, quality, fps, kbs);
  }

  private void SwigDirectorMethodonLogoutRoom() {
    onLogoutRoom();
  }

  public delegate void SwigDelegateILiveObserver_0(int operater, int code, int level, string msg);
  public delegate void SwigDelegateILiveObserver_1();
  public delegate void SwigDelegateILiveObserver_2(bool bReConnect);
  public delegate void SwigDelegateILiveObserver_3();
  public delegate void SwigDelegateILiveObserver_4(int userId, bool bAdd);
  public delegate void SwigDelegateILiveObserver_5(int index, bool bAdd, int code);
  public delegate void SwigDelegateILiveObserver_6(int userId, int index, bool bAdd, int code);
  public delegate void SwigDelegateILiveObserver_7(int userId, int index, global::System.IntPtr videoFrame);
  public delegate void SwigDelegateILiveObserver_8(int userId, int index, global::System.IntPtr audioFrame);
  public delegate void SwigDelegateILiveObserver_9(int userId, int index, float volume);
  public delegate void SwigDelegateILiveObserver_10(int index, int quality, float fps, float kbs);
  public delegate void SwigDelegateILiveObserver_11(int userId, int index, int quality, float fps, float kbs);
  public delegate void SwigDelegateILiveObserver_12();

  private SwigDelegateILiveObserver_0 swigDelegate0;
  private SwigDelegateILiveObserver_1 swigDelegate1;
  private SwigDelegateILiveObserver_2 swigDelegate2;
  private SwigDelegateILiveObserver_3 swigDelegate3;
  private SwigDelegateILiveObserver_4 swigDelegate4;
  private SwigDelegateILiveObserver_5 swigDelegate5;
  private SwigDelegateILiveObserver_6 swigDelegate6;
  private SwigDelegateILiveObserver_7 swigDelegate7;
  private SwigDelegateILiveObserver_8 swigDelegate8;
  private SwigDelegateILiveObserver_9 swigDelegate9;
  private SwigDelegateILiveObserver_10 swigDelegate10;
  private SwigDelegateILiveObserver_11 swigDelegate11;
  private SwigDelegateILiveObserver_12 swigDelegate12;

  private static global::System.Type[] swigMethodTypes0 = new global::System.Type[] { typeof(int), typeof(int), typeof(LogLevel), typeof(string) };
  private static global::System.Type[] swigMethodTypes1 = new global::System.Type[] {  };
  private static global::System.Type[] swigMethodTypes2 = new global::System.Type[] { typeof(bool) };
  private static global::System.Type[] swigMethodTypes3 = new global::System.Type[] {  };
  private static global::System.Type[] swigMethodTypes4 = new global::System.Type[] { typeof(int), typeof(bool) };
  private static global::System.Type[] swigMethodTypes5 = new global::System.Type[] { typeof(int), typeof(bool), typeof(int) };
  private static global::System.Type[] swigMethodTypes6 = new global::System.Type[] { typeof(int), typeof(int), typeof(bool), typeof(int) };
  private static global::System.Type[] swigMethodTypes7 = new global::System.Type[] { typeof(int), typeof(int), typeof(VideoFrame) };
  private static global::System.Type[] swigMethodTypes8 = new global::System.Type[] { typeof(int), typeof(int), typeof(AudioFrame) };
  private static global::System.Type[] swigMethodTypes9 = new global::System.Type[] { typeof(int), typeof(int), typeof(float) };
  private static global::System.Type[] swigMethodTypes10 = new global::System.Type[] { typeof(int), typeof(int), typeof(float), typeof(float) };
  private static global::System.Type[] swigMethodTypes11 = new global::System.Type[] { typeof(int), typeof(int), typeof(int), typeof(float), typeof(float) };
  private static global::System.Type[] swigMethodTypes12 = new global::System.Type[] {  };
}
