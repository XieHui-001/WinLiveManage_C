//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class IBaseLayer : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal IBaseLayer(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(IBaseLayer obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~IBaseLayer() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          AoceWrapperPINVOKE.delete_IBaseLayer(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public virtual string getMark() {
    string ret = AoceWrapperPINVOKE.IBaseLayer_getMark(swigCPtr);
    return ret;
  }

  public virtual bool bAttachGraph() {
    bool ret = AoceWrapperPINVOKE.IBaseLayer_bAttachGraph(swigCPtr);
    return ret;
  }

  public virtual void setVisable(bool bvisable) {
    AoceWrapperPINVOKE.IBaseLayer_setVisable(swigCPtr, bvisable);
  }

  public virtual void setEnable(bool benable) {
    AoceWrapperPINVOKE.IBaseLayer_setEnable(swigCPtr, benable);
  }

  public virtual int getGraphIndex() {
    int ret = AoceWrapperPINVOKE.IBaseLayer_getGraphIndex(swigCPtr);
    return ret;
  }

  public virtual void setStartNode(IBaseLayer node, int index, int toInIndex) {
    AoceWrapperPINVOKE.IBaseLayer_setStartNode__SWIG_0(swigCPtr, IBaseLayer.getCPtr(node), index, toInIndex);
  }

  public virtual void setStartNode(IBaseLayer node, int index) {
    AoceWrapperPINVOKE.IBaseLayer_setStartNode__SWIG_1(swigCPtr, IBaseLayer.getCPtr(node), index);
  }

  public virtual void setStartNode(IBaseLayer node) {
    AoceWrapperPINVOKE.IBaseLayer_setStartNode__SWIG_2(swigCPtr, IBaseLayer.getCPtr(node));
  }

  public virtual void setEndNode(IBaseLayer node) {
    AoceWrapperPINVOKE.IBaseLayer_setEndNode(swigCPtr, IBaseLayer.getCPtr(node));
  }

  public virtual IBaseLayer addNode(IBaseLayer layer) {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.IBaseLayer_addNode__SWIG_0(swigCPtr, IBaseLayer.getCPtr(layer));
    IBaseLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IBaseLayer(cPtr, false);
    return ret;
  }

  public virtual IBaseLayer addNode(ILayer layer) {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.IBaseLayer_addNode__SWIG_1(swigCPtr, ILayer.getCPtr(layer));
    IBaseLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IBaseLayer(cPtr, false);
    return ret;
  }

  public virtual IBaseLayer addLine(IBaseLayer to, int formOut, int toIn) {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.IBaseLayer_addLine__SWIG_0(swigCPtr, IBaseLayer.getCPtr(to), formOut, toIn);
    IBaseLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IBaseLayer(cPtr, false);
    return ret;
  }

  public virtual IBaseLayer addLine(IBaseLayer to, int formOut) {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.IBaseLayer_addLine__SWIG_1(swigCPtr, IBaseLayer.getCPtr(to), formOut);
    IBaseLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IBaseLayer(cPtr, false);
    return ret;
  }

  public virtual IBaseLayer addLine(IBaseLayer to) {
    global::System.IntPtr cPtr = AoceWrapperPINVOKE.IBaseLayer_addLine__SWIG_2(swigCPtr, IBaseLayer.getCPtr(to));
    IBaseLayer ret = (cPtr == global::System.IntPtr.Zero) ? null : new IBaseLayer(cPtr, false);
    return ret;
  }

}
